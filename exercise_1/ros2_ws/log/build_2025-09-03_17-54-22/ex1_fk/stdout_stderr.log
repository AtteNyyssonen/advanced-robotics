[35m[1mConsolidate compiler generated dependencies of target eigen[0m
[ 50%] Built target kdl
[ 75%] [32mBuilding CXX object CMakeFiles/eigen.dir/src/eigen.cpp.o[0m
In file included from [01m[K/usr/include/eigen3/Eigen/Core:164[m[K,
                 from [01m[K/usr/include/kdl/jacobian.hpp:26[m[K,
                 from [01m[K/usr/include/kdl/jntarray.hpp:26[m[K,
                 from [01m[K/home/ilari/Documents/ROBO.720/Ex1/ros2_ws/src/ex1_fk/src/eigen.cpp:12[m[K:
/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h: In instantiation of â€˜[01m[Kconst Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Transpose<Eigen::Matrix<float, 4, 1> >; Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>][m[Kâ€™:
[01m[K/home/ilari/Documents/ROBO.720/Ex1/ros2_ws/src/ex1_fk/src/eigen.cpp:56:76:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h:419:3:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: INVALID_MATRIX_PRODUCT
  419 |   [01;31m[KEIGEN_STATIC_ASSERT[m[K(ProductIsValid || SameSizes, INVALID_MATRIX_PRODUCT)
      |   [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h:419:3:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(false || false)[m[Kâ€™ evaluates to false
/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h: In instantiation of â€˜[01m[Kconst Eigen::Product<Derived, OtherDerived, 1> Eigen::MatrixBase<Derived>::lazyProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Transpose<Eigen::Matrix<float, 4, 1> >; Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/Core/ProductEvaluators.h:402:50:[m[K   required from â€˜[01m[Kstatic void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, 4, 4, 1, 4, 4>; Lhs = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>; Rhs = Eigen::Transpose<Eigen::Matrix<float, 4, 1> >][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/ProductEvaluators.h:148:43:[m[K   required from â€˜[01m[Kstatic void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, 4, 4, 1, 4, 4>; Lhs = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>; Rhs = Eigen::Transpose<Eigen::Matrix<float, 4, 1> >; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 0>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:890:49:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 4, 4, 1, 4, 4>; Src = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 0>; Func = Eigen::internal::assign_op<float, float>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:797:41:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 0>; Derived = Eigen::Matrix<float, 4, 4, 1, 4, 4>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:883:25:[m[K   required from â€˜[01m[Kvoid Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 0>; OtherDerived = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 0>; Derived = Eigen::Matrix<float, 4, 4, 1, 4, 4>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:332:31:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 0>; _Scalar = float; int _Rows = 4; int _Cols = 4; int _Options = 1; int _MaxRows = 4; int _MaxCols = 4][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:850:41:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<float, 4, 4>; Src = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 0>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*; typename Eigen::internal::evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:18:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, 4, 4>; Src = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 0>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:779:32:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 0>; Derived = Eigen::Matrix<float, 4, 4>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:225:24:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 0>; _Scalar = float; int _Rows = 4; int _Cols = 4; int _Options = 0; int _MaxRows = 4; int _MaxCols = 4][m[Kâ€™
[01m[K/home/ilari/Documents/ROBO.720/Ex1/ros2_ws/src/ex1_fk/src/eigen.cpp:56:76:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h:458:3:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: INVALID_MATRIX_PRODUCT
  458 |   [01;31m[KEIGEN_STATIC_ASSERT[m[K(ProductIsValid || SameSizes, INVALID_MATRIX_PRODUCT)
      |   [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h:458:3:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(false || false)[m[Kâ€™ evaluates to false
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of â€˜[01m[KEigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 4, 4>, 1, 4, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 1, 1, false>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 4, 4>, 1, 4, false> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 1, 1, false>][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/plugins/MatrixCwiseBinaryOps.h:25:10:[m[K   required from â€˜[01m[Kconst Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::cwiseProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 1, 1, false>; Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 4, 4>, 1, 4, false> >; typename Eigen::internal::traits<OtherDerived>::Scalar = float; typename Eigen::internal::traits<T>::Scalar = float][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/ProductEvaluators.h:606:52:[m[K   required from â€˜[01m[Kconst CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>; Rhs = Eigen::Transpose<Eigen::Matrix<float, 4, 1> >; int ProductTag = 4; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Rhs>::Scalar = float; typename Eigen::Product<Lhs, Rhs, 1>::Rhs = Eigen::Transpose<Eigen::Matrix<float, 4, 1> >; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Lhs>::Scalar = float; typename Eigen::Product<Lhs, Rhs, 1>::Lhs = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>; Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::CoeffReturnType = float; Eigen::Index = long int][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:654:63:[m[K   required from â€˜[01m[Kvoid Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 4, 4, 1, 4, 4> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0; Eigen::Index = long int][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:668:16:[m[K   required from â€˜[01m[Kvoid Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeffByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 4, 4, 1, 4, 4> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0; Eigen::Index = long int][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:211:35:[m[K   required from â€˜[01m[Kstatic void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 4, 4, 1, 4, 4> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 0; int Stop = 16][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:359:107:[m[K   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:332:31:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 0>; _Scalar = float; int _Rows = 4; int _Cols = 4; int _Options = 1; int _MaxRows = 4; int _MaxCols = 4][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:850:41:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<float, 4, 4>; Src = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 0>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*; typename Eigen::internal::evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:18:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, 4, 4>; Src = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 0>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:779:32:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 0>; Derived = Eigen::Matrix<float, 4, 4>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:225:24:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 4, 4>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Matrix<float, 4, 4>, 0>, Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 0>; _Scalar = float; int _Rows = 4; int _Cols = 4; int _Options = 0; int _MaxRows = 4; int _MaxCols = 4][m[Kâ€™
[01m[K/home/ilari/Documents/ROBO.720/Ex1/ros2_ws/src/ex1_fk/src/eigen.cpp:56:76:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:115:7:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES
  115 |       [01;31m[KEIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE[m[K(Lhs, Rhs)
      |       [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:115:7:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(((((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 4, 4>, 1, 4, false> > >::ret) == 0) && (((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 1, 1, false> >::ret) == 0)) || ((((((int)Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 4, 4>, 1, 4, false> >::RowsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 1, 1, false>::RowsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 4, 4>, 1, 4, false> >::RowsAtCompileTime) == ((int)Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 1, 1, false>::RowsAtCompileTime))) && (((((int)Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 4, 4>, 1, 4, false> >::ColsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 1, 1, false>::ColsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 4, 4>, 1, 4, false> >::ColsAtCompileTime) == ((int)Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 4, 1> >, 1, 1, false>::ColsAtCompileTime)))))[m[Kâ€™ evaluates to false
gmake[2]: *** [CMakeFiles/eigen.dir/build.make:76: CMakeFiles/eigen.dir/src/eigen.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/eigen.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
